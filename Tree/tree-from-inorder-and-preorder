'''
# Node class
class Node:
    def __init__(self,val):
        self.data = val
        self.right = None
        self.left = None

'''
# Note: Build tree and return root node
class Solution:
    def buildTree(self, inorder, preorder):
        inorder_index={val: ind for ind,val in enumerate(inorder)}
        
        self.pre_index=0
        
        def arry_to_tree(left,right):
            
            if left>right:
                return None
            
            root_val=preorder[self.pre_index]
            self.pre_index+=1
            root=Node(root_val)
            
            root.left=arry_to_tree(left,inorder_index[root_val]-1)
            root.right=arry_to_tree(inorder_index[root_val]+1,right)
            
            return root
            
        return arry_to_tree(0,len(inorder)-1)